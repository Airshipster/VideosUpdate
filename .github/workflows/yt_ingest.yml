name: YouTube → Parquet (daily wave)

on:
  schedule:
    - cron: "0 9 * * *"     # 09:00 UTC = 13:00 
  workflow_dispatch: {}      # ручной старт из GitHub UI

permissions:
  contents: read

concurrency:
  group: yt-daily-wave
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write Service Account JSON
        env:
          GCP_SA_JSON: ${{ secrets.GCP_SA_JSON }}
        run: |
          echo "${GCP_SA_JSON}" > sa.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GITHUB_WORKSPACE/sa.json" >> $GITHUB_ENV

      - name: Run pipeline
        env:
          # --- YouTube & quotas ---
          YOUTUBE_API_KEYS: ${{ secrets.YOUTUBE_API_KEYS }}     
          DAILY_UNIT_BUDGET: ${{ secrets.DAILY_UNIT_BUDGET }}   

          # --- Sheets (исходник и helper в ОДНОМ документе) ---
          SOURCE_SHEET_ID: ${{ secrets.SOURCE_SHEET_ID }}
          SOURCE_SHEET_TAB: ${{ secrets.SOURCE_SHEET_TAB }}     
          MAP_SHEET_TAB: ${{ secrets.MAP_SHEET_TAB }}           

          # --- Drive target ---
          DRIVE_FOLDER_ID: ${{ secrets.DRIVE_FOLDER_ID }}       

          # --- Scheduling & limits ---
          RESCAN_INTERVAL_DAYS: ${{ secrets.RESCAN_INTERVAL_DAYS }} # 1
          RUN_ANCHOR_LOCAL: ${{ secrets.RUN_ANCHOR_LOCAL }}         # "13.08.2025 13:00" (формат DD.MM.YYYY HH:MM)
          RUN_TIME_LOCAL: ${{ secrets.RUN_TIME_LOCAL }}             # "13:00"
          PLAYLIST_LIMIT: ${{ secrets.PLAYLIST_LIMIT }}             # "5" на тест

        run: |
          python scripts/pipeline.py
