name: YouTube â†’ Parquet (daily wave)

on:
  schedule:
    - cron: "0 9 * * *"
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: yt-daily-wave
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write Service Account JSON
        env:
          GCP_SA_JSON: ${{ secrets.GCP_SA_JSON }}
        run: |
          echo "${GCP_SA_JSON}" > sa.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GITHUB_WORKSPACE/sa.json" >> $GITHUB_ENV
          echo "PYTHONUNBUFFERED=1" >> $GITHUB_ENV

      - name: Sanity check secrets
        run: |
          req=(GCP_SA_JSON YOUTUBE_API_KEYS DAILY_UNIT_BUDGET SOURCE_SHEET_ID SOURCE_SHEET_TAB MAP_SHEET_TAB DRIVE_FOLDER_ID RESCAN_INTERVAL_DAYS RUN_ANCHOR_LOCAL RUN_TIME_LOCAL PLAYLIST_LIMIT)
          missing=()
          for k in "${req[@]}"; do
            v="${!k}"
            if [ -z "$v" ]; then missing+=("$k"); fi
          done
          if [ ${#missing[@]} -gt 0 ]; then
            echo "MISSING: ${missing[*]}"
            exit 2
          fi
        env:
          GCP_SA_JSON: ${{ secrets.GCP_SA_JSON }}
          YOUTUBE_API_KEYS: ${{ secrets.YOUTUBE_API_KEYS }}
          DAILY_UNIT_BUDGET: ${{ secrets.DAILY_UNIT_BUDGET }}
          SOURCE_SHEET_ID: ${{ secrets.SOURCE_SHEET_ID }}
          SOURCE_SHEET_TAB: ${{ secrets.SOURCE_SHEET_TAB }}
          MAP_SHEET_TAB: ${{ secrets.MAP_SHEET_TAB }}
          DRIVE_FOLDER_ID: ${{ secrets.DRIVE_FOLDER_ID }}
          RESCAN_INTERVAL_DAYS: ${{ secrets.RESCAN_INTERVAL_DAYS }}
          RUN_ANCHOR_LOCAL: ${{ secrets.RUN_ANCHOR_LOCAL }}
          RUN_TIME_LOCAL: ${{ secrets.RUN_TIME_LOCAL }}
          PLAYLIST_LIMIT: ${{ secrets.PLAYLIST_LIMIT }}

      - name: Run pipeline
        env:
          YOUTUBE_API_KEYS: ${{ secrets.YOUTUBE_API_KEYS }}
          DAILY_UNIT_BUDGET: ${{ secrets.DAILY_UNIT_BUDGET }}
          SOURCE_SHEET_ID: ${{ secrets.SOURCE_SHEET_ID }}
          SOURCE_SHEET_TAB: ${{ secrets.SOURCE_SHEET_TAB }}
          MAP_SHEET_TAB: ${{ secrets.MAP_SHEET_TAB }}
          DRIVE_FOLDER_ID: ${{ secrets.DRIVE_FOLDER_ID }}
          RESCAN_INTERVAL_DAYS: ${{ secrets.RESCAN_INTERVAL_DAYS }}
          RUN_ANCHOR_LOCAL: ${{ secrets.RUN_ANCHOR_LOCAL }}
          RUN_TIME_LOCAL: ${{ secrets.RUN_TIME_LOCAL }}
          PLAYLIST_LIMIT: ${{ secrets.PLAYLIST_LIMIT }}
        run: |
          python scripts/pipeline.py
